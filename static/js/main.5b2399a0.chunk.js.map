{"version":3,"sources":["questions.js","colors.js","App.js","serviceWorker.js","index.js"],"names":["styles","outer","width","height","question","display","alignItems","justifyContent","fontSize","textAlign","actionContainer","yesContainer","backgroundColor","noContainer","color","withRouter","props","goNext","column","row","setQuestionColumn","setQuestionRow","showAnswer","answer","history","push","useState","questionRow","questionColumn","yesAction","noAction","style","onClick","colorsArr","results","fontColors","colors","id","match","params","App","basename","exact","path","component","questions","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b2399a0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  withRouter\n} from 'react-router-dom'\n\nconst styles = {\n  outer: {\n    width: \"100vw\",\n    height: \"100vh\"\n  },\n  question: {\n    height: \"50%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"2rem\",\n    textAlign: \"center\"\n  },\n  actionContainer: {\n    height: \"50%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  yesContainer: {\n    backgroundColor: \"green\",\n    width: \"50%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  noContainer: {\n    backgroundColor: \"red\",\n    width: \"50%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"white\"\n  }\n}\n\nfunction Question(props) {\n  const goNext = (column, row) => () => {\n    setQuestionColumn(column)\n    setQuestionRow(row)\n  }\n  const showAnswer = (answer) => () => {\n    props.history.push(`/result/${answer}`)\n  }\n\n  const [questionRow, setQuestionRow] = useState(0)\n  const [questionColumn, setQuestionColumn] = useState(0)\n  const questions = [\n    [\n      {\n        question: \"Czasem przejmujesz się że nie masz wystarcząjących kompetencji by być tu gdzie jesteś?\",\n        yesAction: goNext(0, 1),\n        noAction: goNext(1, 1),\n      }\n    ],\n    [\n      {\n        question: \"Uważasz innych za bardziej dojrzałych do zadania od siebie\",\n        yesAction: goNext(0, 2),\n        noAction: goNext(1, 2)\n      },\n      {\n        question: \"Czujesz się niekomfortowo gdy ktoś chwali twoją pracę\",\n        yesAction: goNext(2, 2),\n        noAction: goNext(3, 2)\n      }\n    ],\n    [\n      {\n        question: \"Używasz języka 'minimalizującego' jak np. 'wydaje mi sie', 'chyba'\",\n        yesAction: goNext(0, 3),\n        noAction: goNext(1, 3)\n      },\n      {\n        question: \"Unikasz proszenia o podwyżkę\",\n        yesAction: goNext(2, 3),\n        noAction: goNext(3, 3),\n      },\n      {\n        question: \"Stawiasz sobie nieosiągalne cele\",\n        yesAction: goNext(4, 3),\n        noAction: goNext(3, 3)\n      },\n      {\n        question: \"Czy uważany jesteś za perfekcjoniste\",\n        yesAction: goNext(4, 3),\n        noAction: goNext(5, 3)\n      },\n    ],\n    [\n      {\n        question: \"Uważasz że ludzie prawią tobie pochwały tylko bo są mili\",\n        yesAction: goNext(1, 4),\n        noAction: goNext(0, 4)\n      },\n      {\n        question: \"Uważasz że twój sukces jest głownie dziełem zewnętrznych czynników (dobre kontakty, zbieg okoliczności)\",\n        yesAction: goNext(1, 4),\n        noAction: goNext(2, 4)\n      },\n      {\n        question: \"Uważasz że twoja praca musi być bezbłedna cały czas\",\n        yesAction: goNext(3, 4),\n        noAction: goNext(2, 4)\n      },\n      {\n        question: \"Uważasz że twoje miejsce w życiu zawdzięczasz głównie szczęściu?\",\n        yesAction: goNext(3, 4),\n        noAction: goNext(4, 4)\n      },\n      {\n        question: \"Martwisz się że nie spełniasz postawionych wymagań\",\n        yesAction: goNext(3, 4),\n        noAction: goNext(4, 4)\n      },\n      {\n        question: \"Czy czętso się przepracowujesz?\",\n        noAction: goNext(4, 4),\n        yesAction: goNext(5, 4)\n      }\n    ],\n    [\n      {\n        question: \"Czy unikasz zkładania CV do firm chyba że spełniasz wszystkie wymagania?\",\n        yesAction: showAnswer(0),\n        noAction: showAnswer(1)\n      },\n      {\n        question: \"Uważasz że poniosłeś porażkę jeśli nauka czegoś nie idzie ci jak z płatka?\",\n        yesAction: showAnswer(0),\n        noAction: showAnswer(2)\n      },\n      {\n        question: \"Masz wrażenie że do wszystkiego musisz dojść sam\",\n        yesAction: showAnswer(2),\n        noAction: showAnswer(1)\n\n      },\n      {\n        question: \"Często zostajesz w pracy do późna?\",\n        yesAction: showAnswer(3),\n        noAction: showAnswer(4)\n      },\n      {\n        question: \"Masz problem z delegowaniem zadań?\",\n        yesAction: showAnswer(3),\n        noAction: showAnswer(5)\n      },\n      {\n        question: \"Czy jesteś mikromenadżerem?\",\n        yesAction: showAnswer(4),\n        noAction: showAnswer(5)\n      }\n    ]\n  ]\n\n  const { question, yesAction, noAction } = questions[questionRow][questionColumn]\n  return <div style={styles.outer}>\n    <div style={styles.question}>\n      {question}\n    </div>\n    <div style={styles.actionContainer}>\n      <div style={styles.yesContainer} onClick={yesAction}>Tak</div>\n      <div style={styles.noContainer} onClick={noAction}>Nie</div>\n    </div>\n  </div>\n}\n\nexport default withRouter(Question)","import React from 'react'\nconst colorsArr = [\"rgb(0,0,255)\", \"rgb(255, 217, 102)\", \"rgb(204, 0, 0)\", \"rgb(77, 208, 225)\", \"rgb(153, 0, 255)\", \"rgb(244, 204, 204)\"]\nconst results = [\"Expert\", \"Solista\", \"Naturalny geniusz\", \"Superman / Superwoman\", \"Perfekcjonista\", \"-\"]\nconst fontColors = [\"white\", \"black\", \"white\", \"black\", \"white\", 'black']\nfunction colors({ match: { params: { id } } }) {\n\n  return <div style={{ height: '100vh', width: '100vw', backgroundColor: colorsArr[id], display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n    <div style={{fontSize: \"4rem\", color: fontColors[id] }}> {results[id]}</div>\n  </div>\n}\n\nexport default colors\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport questions from './questions';\nimport colors from './colors';\n\nfunction App() {\n  return (\n    <Router basename=\"/\" >\n      <div>\n        <Route exact path=\"/\" component={questions} />\n        <Route path=\"/result/:id\" component={colors} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}